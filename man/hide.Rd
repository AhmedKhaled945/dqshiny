% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/display.R
\name{hide}
\alias{hide}
\alias{show}
\alias{toggle}
\title{Change the state of a shiny interface element}
\usage{
hide(ids)

show(ids)

toggle(ids, condition = NULL)
}
\arguments{
\item{ids}{Character vector, id(s) of the element to hide/show.}

\item{condition}{Condition to use for toggling the visibility.}
}
\description{
Those functions can be used to change an elements visibility
status.
}
\note{
All functions from this family won't work, if there is not at least
one dqshiny element in the UI. If there is absolutely no need to use any of
those elements, please add \code{\link{init}} to your UI.
}
\examples{
\donttest{library(shiny)
shinyApp(
  ui = fluidPage(
    actionButton("btn_hide", "Hide"),
    actionButton("btn_show", "Show"),
    actionButton("btn_toggle", "Toggle"),
    actionButton("btn_toggle_cond", "Toggle Visibility with Condition"),
    actionButton("btn_toggle_all", "Toggle All Visibilities"),
    checkboxInput("condition", "Visible"),
    dq_space(), # this is needed to make everything work
    actionButton("example1", "EXAMPLE1"),
    actionButton("example2", "EXAMPLE2"),
    actionButton("example3", "EXAMPLE3")
  ),
  server = function(input, output) {
    observeEvent(input$btn_hide, hide("example1"))
    observeEvent(input$btn_show, show("example1"))
    observeEvent(input$btn_toggle, toggle("example1"))
    observeEvent(input$btn_toggle_cond,
      toggle("example1", input$condition)
    )
    observeEvent(input$btn_toggle_all,
      toggle(c("example1", "example2", "example3"))
    )
  }
)}
}
\seealso{
Other js handler: \code{\link{add_class}},
  \code{\link{enable}}
}
\author{
richard.kunze
}
\concept{js handler}
